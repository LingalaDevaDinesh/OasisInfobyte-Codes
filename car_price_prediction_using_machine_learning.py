# -*- coding: utf-8 -*-
"""Car Price Prediction using Machine Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SLRMQ4VireVoXw2nOe4YMQO-rZ3ciVmi
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor

data = pd.read_csv('/content/CarPrice_Assignment.csv')

data.head()

data.info()

data.isnull().sum()

print(data.describe())

data.CarName.unique()

sns.set_style("whitegrid")
plt.figure(figsize=(15, 10))
sns.histplot(data.price)
plt.show()

print(data.corr(numeric_only=True))

plt.figure(figsize=(20, 15))
correlations = data.corr(numeric_only=True)
sns.heatmap(correlations, cmap="coolwarm", annot=True)
plt.show()

predict = "price"
data = data[["symboling", "wheelbase", "carlength",
             "carwidth", "carheight", "curbweight",
             "enginesize", "boreratio", "stroke",
             "compressionratio", "horsepower", "peakrpm",
             "citympg", "highwaympg", "price"]]
x = np.array(data.drop(labels=[predict], axis=1))
y = np.array(data[predict])

from sklearn.model_selection import train_test_split
xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2)

from sklearn.tree import DecisionTreeRegressor
model = DecisionTreeRegressor()
model.fit(xtrain, ytrain)
predictions = model.predict(xtest)

from sklearn.metrics import mean_absolute_error
model.score(xtest, predictions)

