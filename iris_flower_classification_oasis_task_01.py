# -*- coding: utf-8 -*-
"""Iris flower classification oasis task-01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UC03sUkj-I_LrTui2qSwzKVXAoJQrehs

#Iris flower classification

Step-01Import the necessary libraries
"""

import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

"""Step 2: Load the Iris dataset"""

iris = load_iris()
X = iris.data  # Input features
y = iris.target  # Target variable

"""Step 3: Split the dataset into training and testing sets"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Step 4: Define and train the K-Nearest Neighbors (KNN) classifier"""

knn = KNeighborsClassifier(n_neighbors=3)  # Create a KNN classifier with 3 neighbors
knn.fit(X_train, y_train)  # Train the classifier on the training data

"""Step 5: Make predictions on the test set"""

y_pred = knn.predict(X_test)  # Predict the class labels for the test set

"""Step 6: Calculate the accuracy of the classifier"""

accuracy = accuracy_score(y_test, y_pred)  # Compare the predicted labels with the true labels
print("Accuracy:", accuracy)

"""The above code uses the K-Nearest Neighbors algorithm for classification. It splits the Iris dataset into training and testing sets, trains the classifier on the training data, and then makes predictions on the test set. Finally, it calculates the accuracy of the classifier by comparing the predicted labels with the true labels.

You can adjust the n_neighbors parameter in Step 4 to change the number of neighbors considered by the KNN classifier. Feel free to modify the code as per your project requirements.
"""